{"ast":null,"code":"import _slicedToArray from\"/Users/kristoffersmedlund/dev/hanna/quiz-app/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import AvatarPicker from\"./AvatarPicker\";export default function App(){var questions=[{questionText:\"När får man vistas på ett skjutfält\",answerOptions:[{answerText:\"När du blivit godkänd av verkställande officer\",isCorrect:false},{answerText:\"När övning ej pågår\",isCorrect:true},{answerText:\"Aldrig\",isCorrect:false}]},{questionText:\"Vart kan man hitta information om att fältet är avlyst?\",answerOptions:[{answerText:\"I lokal tidning\",isCorrect:false},{answerText:\"På försmaktens hemsida & informationsskyltar på plats\",isCorrect:true},{answerText:\"Värnpliktsnytt\",isCorrect:false}]},{questionText:\"Vad händer om du bryter mot ett tillträdelseförbud på ett skjutfält?\",answerOptions:[{answerText:\"Innebär livsfara och omhändertagande samt polisanmälan\",isCorrect:true},{answerText:\"Du får böta 10 000 SEK\",isCorrect:false},{answerText:\"Du får aldrig besöka närområdet igen\",isCorrect:false}]},{questionText:\"Vilket är maxstaffen om man beträder ett avlyst skjutfält?\",answerOptions:[{answerText:\"Ett halvår\",isCorrect:false},{answerText:\"Ett år\",isCorrect:false},{answerText:\"Två år\",isCorrect:true}]}];var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentQuestion=_useState2[0],setCurrentQuestion=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showScore=_useState4[0],setShowScore=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),score=_useState6[0],setScore=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isDone=_useState8[0],setIsDone=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),name=_useState10[0],setName=_useState10[1];var handleAnswerOptionClick=function handleAnswerOptionClick(isCorrect){if(isCorrect){setScore(score+1);}var nextQuestion=currentQuestion+1;if(nextQuestion<questions.length){setCurrentQuestion(nextQuestion);}else{setShowScore(true);}};var questionsComp=/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},showScore?/*#__PURE__*/React.createElement(\"div\",{className:\"score-section\"},\"Hej \",name,\", du fick \",score,\" av \",questions.length):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"question-section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"question-count\"},/*#__PURE__*/React.createElement(\"span\",null,\"Question \",currentQuestion+1),\"/\",questions.length),/*#__PURE__*/React.createElement(\"div\",{className:\"question-text\"},questions[currentQuestion].questionText)),/*#__PURE__*/React.createElement(\"div\",{className:\"answer-section\"},questions[currentQuestion].answerOptions.map(function(answerOption){return/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return handleAnswerOptionClick(answerOption.isCorrect);}},answerOption.answerText);}))));return/*#__PURE__*/React.createElement(React.Fragment,null,isDone?questionsComp:/*#__PURE__*/React.createElement(AvatarPicker,{setIsDone:setIsDone,setName:setName}));}","map":{"version":3,"sources":["/Users/kristoffersmedlund/dev/hanna/quiz-app/final/src/App.js"],"names":["React","useState","AvatarPicker","App","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","isDone","setIsDone","name","setName","handleAnswerOptionClick","nextQuestion","length","questionsComp","map","answerOption"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AvatarPicker from \"./AvatarPicker\";\n\nexport default function App() {\n  const questions = [\n    {\n      questionText: \"När får man vistas på ett skjutfält\",\n      answerOptions: [\n        {\n          answerText: \"När du blivit godkänd av verkställande officer\",\n          isCorrect: false,\n        },\n        { answerText: \"När övning ej pågår\", isCorrect: true },\n        { answerText: \"Aldrig\", isCorrect: false },\n      ],\n    },\n    {\n      questionText: \"Vart kan man hitta information om att fältet är avlyst?\",\n      answerOptions: [\n        { answerText: \"I lokal tidning\", isCorrect: false },\n        {\n          answerText: \"På försmaktens hemsida & informationsskyltar på plats\",\n          isCorrect: true,\n        },\n        { answerText: \"Värnpliktsnytt\", isCorrect: false },\n      ],\n    },\n    {\n      questionText:\n        \"Vad händer om du bryter mot ett tillträdelseförbud på ett skjutfält?\",\n      answerOptions: [\n        {\n          answerText: \"Innebär livsfara och omhändertagande samt polisanmälan\",\n          isCorrect: true,\n        },\n        { answerText: \"Du får böta 10 000 SEK\", isCorrect: false },\n        {\n          answerText: \"Du får aldrig besöka närområdet igen\",\n          isCorrect: false,\n        },\n      ],\n    },\n\n    {\n      questionText:\n        \"Vilket är maxstaffen om man beträder ett avlyst skjutfält?\",\n      answerOptions: [\n        {\n          answerText: \"Ett halvår\",\n          isCorrect: false,\n        },\n        { answerText: \"Ett år\", isCorrect: false },\n        {\n          answerText: \"Två år\",\n          isCorrect: true,\n        },\n      ],\n    },\n  ];\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isDone, setIsDone] = useState(false);\n  const [name, setName] = useState(\"\");\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const questionsComp = (\n    <div className=\"app\">\n      {showScore ? (\n        <div className=\"score-section\">\n          Hej {name}, du fick {score} av {questions.length}\n        </div>\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            <div className=\"question-text\">\n              {questions[currentQuestion].questionText}\n            </div>\n          </div>\n          <div className=\"answer-section\">\n            {questions[currentQuestion].answerOptions.map((answerOption) => (\n              <button\n                onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}\n              >\n                {answerOption.answerText}\n              </button>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n\n  return (\n    <>\n      {isDone ? (\n        questionsComp\n      ) : (\n        <AvatarPicker setIsDone={setIsDone} setName={setName} />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}